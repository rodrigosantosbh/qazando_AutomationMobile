"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const uuid_1 = require("uuid");
const createWindow_1 = __importDefault(require("../scripts/createWindow"));
const WINDOW_FEATURES = 'menubar=1,toolbar=1,location=1,resizable=1,scrollbars=1';
const NEW_PAGE_URL = 'about:blank';
const DEFAULT_WINDOW_TYPE = 'tab';
/**
 * Create a new top-level browsing context.
 *
 * @alias browser.createWindow
 * @see https://w3c.github.io/webdriver/#new-window
 * @param {string} type  Set to 'tab' if the newly created window shares an OS-level window with the current browsing context, or 'window' otherwise.
 * @return {object}      New window object containing 'handle' with the value of the handle and 'type' with the value of the created window type
 */
async function createWindow({ type }) {
    type = type || DEFAULT_WINDOW_TYPE;
    let newPage;
    if (type === 'window') {
        const page = this.getPageHandle();
        await page.evaluate(createWindow_1.default, NEW_PAGE_URL, WINDOW_FEATURES);
        const newWindowTarget = await this.browser.waitForTarget((target) => target.url() === NEW_PAGE_URL);
        newPage = await newWindowTarget.page();
        if (!newPage) {
            throw new Error('Couldn\'t find page to switch to');
        }
    }
    else {
        newPage = await this.browser.newPage();
    }
    const handle = uuid_1.v4();
    await newPage.bringToFront();
    this.currentWindowHandle = handle;
    this.windows.set(handle, newPage);
    return {
        handle: this.currentWindowHandle,
        type
    };
}
exports.default = createWindow;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlV2luZG93LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbW1hbmRzL2NyZWF0ZVdpbmRvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtCQUFtQztBQUduQywyRUFBNkM7QUFFN0MsTUFBTSxlQUFlLEdBQUcseURBQXlELENBQUE7QUFDakYsTUFBTSxZQUFZLEdBQUcsYUFBYSxDQUFBO0FBQ2xDLE1BQU0sbUJBQW1CLEdBQUcsS0FBSyxDQUFBO0FBRWpDOzs7Ozs7O0dBT0c7QUFDWSxLQUFLLFVBQVUsWUFBWSxDQUV0QyxFQUFFLElBQUksRUFBOEI7SUFFcEMsSUFBSSxHQUFHLElBQUksSUFBSSxtQkFBbUIsQ0FBQTtJQUNsQyxJQUFJLE9BQU8sQ0FBQTtJQUVYLElBQUksSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUNuQixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUE7UUFFakMsTUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLHNCQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFBO1FBQzNELE1BQU0sZUFBZSxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQ3BELENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEtBQUssWUFBWSxDQUFDLENBQUE7UUFFOUMsT0FBTyxHQUFHLE1BQU0sZUFBZSxDQUFDLElBQUksRUFBRSxDQUFBO1FBQ3RDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDVixNQUFNLElBQUksS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUE7U0FDdEQ7S0FDSjtTQUFNO1FBQ0gsT0FBTyxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQTtLQUN6QztJQUVELE1BQU0sTUFBTSxHQUFHLFNBQU0sRUFBRSxDQUFBO0lBQ3ZCLE1BQU0sT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFBO0lBRTVCLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUE7SUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0lBQ2pDLE9BQU87UUFDSCxNQUFNLEVBQUUsSUFBSSxDQUFDLG1CQUFtQjtRQUNoQyxJQUFJO0tBQ1AsQ0FBQTtBQUNMLENBQUM7QUEvQkQsK0JBK0JDIn0=