"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * injector script for executeScript command
 * According to the WebDriver spec we need to ensure to serialize all elements
 * being returned from the script. In order to do so we attach a data attribute
 * to them and fetch them using Puppeteer after the script execution. Instead
 * of the element we return the dataFlag string instead to signalize that this
 * is suppose to be an element handle
 *
 * @param  {HTMLElement} _            $eval fetched element
 * @param  {String}      script       user script
 * @param  {String}      dataProperty property name for elements being returned
 * @param  {String}      dataFlag     flag for element
 * @param  {Object[]}    args         user arguments for custom script
 * @return {Object}                   result of custom script
 */
exports.default = (_, script, scriptTimeout, dataProperty, dataFlag, ...commandArgs) => {
    return new Promise((_resolve, _reject) => {
        setTimeout(() => _reject('script timeout'), scriptTimeout);
        window.arguments = [...commandArgs, (result) => {
                let tmpResult = result instanceof NodeList ? Array.from(result) : result;
                const isResultArray = Array.isArray(tmpResult);
                tmpResult = isResultArray ? tmpResult : [tmpResult];
                if (tmpResult.find((r) => r instanceof HTMLElement)) {
                    tmpResult = tmpResult.map((r, i) => {
                        if (r instanceof HTMLElement) {
                            const dataPropertyValue = `${dataFlag}_${i}`;
                            r.setAttribute(dataProperty, dataPropertyValue);
                            return dataPropertyValue;
                        }
                        return result;
                    });
                }
                return _resolve(isResultArray ? tmpResult : tmpResult[0]);
            }];
        return eval(script);
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhlY3V0ZUFzeW5jU2NyaXB0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NjcmlwdHMvZXhlY3V0ZUFzeW5jU2NyaXB0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxrQkFBZSxDQUNYLENBQVUsRUFDVixNQUFjLEVBQ2QsYUFBcUIsRUFDckIsWUFBb0IsRUFDcEIsUUFBZ0IsRUFDaEIsR0FBRyxXQUFrQixFQUNULEVBQUU7SUFDZCxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQ3JDLFVBQVUsQ0FDTixHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFDL0IsYUFBYSxDQUNoQixDQUVBO1FBQUMsTUFBYyxDQUFDLFNBQVMsR0FBRyxDQUFDLEdBQUcsV0FBVyxFQUFFLENBQUMsTUFBc0IsRUFBRSxFQUFFO2dCQUNyRSxJQUFJLFNBQVMsR0FBbUIsTUFBTSxZQUFZLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFBO2dCQUN4RixNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO2dCQUM5QyxTQUFTLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBNEIsQ0FBQyxDQUFBO2dCQUV0RSxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsWUFBWSxXQUFXLENBQUMsRUFBRTtvQkFDakQsU0FBUyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7d0JBQy9CLElBQUksQ0FBQyxZQUFZLFdBQVcsRUFBRTs0QkFDMUIsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLFFBQVEsSUFBSSxDQUFDLEVBQUUsQ0FBQTs0QkFDNUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsaUJBQWlCLENBQUMsQ0FBQTs0QkFDL0MsT0FBTyxpQkFBaUIsQ0FBQTt5QkFDM0I7d0JBRUQsT0FBTyxNQUFNLENBQUE7b0JBQ2pCLENBQUMsQ0FBQyxDQUFBO2lCQUNMO2dCQUVELE9BQU8sUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtZQUM3RCxDQUFDLENBQUMsQ0FBQTtRQUVGLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3ZCLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQyxDQUFBIn0=