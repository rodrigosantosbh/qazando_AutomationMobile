"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SevereServiceError = exports.multiremote = exports.attach = exports.remote = void 0;
const logger_1 = __importDefault(require("@wdio/logger"));
const webdriver_1 = __importDefault(require("webdriver"));
const webdriver_2 = require("webdriver");
const config_1 = require("@wdio/config");
const utils_1 = require("@wdio/utils");
const multiremote_1 = __importDefault(require("./multiremote"));
const SevereServiceError_1 = __importDefault(require("./utils/SevereServiceError"));
const detectBackend_1 = __importDefault(require("./utils/detectBackend"));
const constants_1 = require("./constants");
const utils_2 = require("./utils");
/**
 * A method to create a new session with WebdriverIO
 *
 * @param  {Object} [params={}]       Options to create the session with
 * @param  {function} remoteModifier  Modifier function to change the monad object
 * @return {object}                   browser object with sessionId
 */
exports.remote = async function (params, remoteModifier) {
    logger_1.default.setLogLevelsConfig(params.logLevels, params.logLevel);
    const config = config_1.validateConfig(constants_1.WDIO_DEFAULTS, params, Object.keys(webdriver_2.DEFAULTS));
    const automationProtocol = await utils_2.getAutomationProtocol(config);
    const modifier = (client, options) => {
        /**
         * overwrite instance options with default values of the protocol
         * package (without undefined properties)
         */
        Object.assign(options, Object.entries(config)
            .reduce((a, [k, v]) => (v == null ? a : { ...a, [k]: v }), {}));
        if (typeof remoteModifier === 'function') {
            client = remoteModifier(client, options);
        }
        options.automationProtocol = automationProtocol;
        return client;
    };
    const prototype = utils_2.getPrototype('browser');
    const ProtocolDriver = (await Promise.resolve().then(() => __importStar(require(automationProtocol)))).default;
    params = Object.assign({}, detectBackend_1.default(params), params);
    await utils_2.updateCapabilities(params, automationProtocol);
    const instance = await ProtocolDriver.newSession(params, modifier, prototype, utils_1.wrapCommand);
    /**
     * we need to overwrite the original addCommand and overwriteCommand
     * in order to wrap the function within Fibers (only if webdriverio
     * is used with @wdio/cli)
     */
    if (params.framework && !utils_2.isStub(automationProtocol)) {
        const origAddCommand = instance.addCommand.bind(instance);
        instance.addCommand = (name, fn, attachToElement) => (origAddCommand(name, utils_1.runFnInFiberContext(fn), attachToElement));
        const origOverwriteCommand = instance.overwriteCommand.bind(instance);
        instance.overwriteCommand = (name, fn, attachToElement) => (origOverwriteCommand(name, utils_1.runFnInFiberContext(fn), attachToElement));
    }
    instance.addLocatorStrategy = utils_2.addLocatorStrategyHandler(instance);
    return instance;
};
exports.attach = async function (params) {
    var _a, _b;
    const prototype = utils_2.getPrototype('browser');
    let automationProtocol = 'webdriver';
    if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.automationProtocol) {
        automationProtocol = (_b = params.options) === null || _b === void 0 ? void 0 : _b.automationProtocol;
    }
    const ProtocolDriver = (await Promise.resolve().then(() => __importStar(require(automationProtocol)))).default;
    return ProtocolDriver.attachToSession(params, undefined, prototype, utils_1.wrapCommand);
};
exports.multiremote = async function (params, { automationProtocol } = {}) {
    const multibrowser = new multiremote_1.default();
    const browserNames = Object.keys(params);
    /**
     * create all instance sessions
     */
    await Promise.all(browserNames.map(async (browserName) => {
        const instance = await exports.remote(params[browserName]);
        return multibrowser.addInstance(browserName, instance);
    }));
    /**
     * use attachToSession capability to wrap instances around blank pod
     */
    const prototype = utils_2.getPrototype('browser');
    const sessionParams = utils_2.isStub(automationProtocol) ? undefined : {
        sessionId: '',
        isW3C: multibrowser.instances[browserNames[0]].isW3C,
        logLevel: multibrowser.instances[browserNames[0]].options.logLevel
    };
    const ProtocolDriver = automationProtocol && utils_2.isStub(automationProtocol)
        ? require(automationProtocol).default
        : webdriver_1.default;
    const driver = ProtocolDriver.attachToSession(sessionParams, multibrowser.modifier.bind(multibrowser), prototype, utils_1.wrapCommand);
    /**
     * in order to get custom command overwritten or added to multiremote instance
     * we need to pass in the prototype of the multibrowser
     */
    if (!utils_2.isStub(automationProtocol)) {
        const origAddCommand = driver.addCommand.bind(driver);
        driver.addCommand = (name, fn, attachToElement) => {
            return origAddCommand(name, utils_1.runFnInFiberContext(fn), attachToElement, Object.getPrototypeOf(multibrowser.baseInstance), multibrowser.instances);
        };
        const origOverwriteCommand = driver.overwriteCommand.bind(driver);
        driver.overwriteCommand = (name, fn, attachToElement) => {
            return origOverwriteCommand(name, utils_1.runFnInFiberContext(fn), attachToElement, Object.getPrototypeOf(multibrowser.baseInstance), multibrowser.instances);
        };
    }
    driver.addLocatorStrategy = utils_2.addLocatorStrategyHandler(driver);
    return driver;
};
exports.SevereServiceError = SevereServiceError_1.default;
__exportStar(require("./types"), exports);
__exportStar(require("./utils/interception/types"), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDBEQUFpQztBQUVqQywwREFBaUM7QUFDakMseUNBQW9DO0FBQ3BDLHlDQUE2QztBQUM3Qyx1Q0FBOEQ7QUFJOUQsZ0VBQXVDO0FBRXZDLG9GQUFpRTtBQUNqRSwwRUFBaUQ7QUFDakQsMkNBQTJDO0FBQzNDLG1DQUdnQjtBQUtoQjs7Ozs7O0dBTUc7QUFDVSxRQUFBLE1BQU0sR0FBRyxLQUFLLFdBQVcsTUFBcUIsRUFBRSxjQUF5QjtJQUNsRixnQkFBTSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxTQUFnQixFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUVuRSxNQUFNLE1BQU0sR0FBRyx1QkFBYyxDQUFnQix5QkFBYSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLG9CQUFRLENBQVEsQ0FBQyxDQUFBO0lBQ2pHLE1BQU0sa0JBQWtCLEdBQUcsTUFBTSw2QkFBcUIsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUM5RCxNQUFNLFFBQVEsR0FBRyxDQUFDLE1BQTZCLEVBQUUsT0FBNEIsRUFBRSxFQUFFO1FBQzdFOzs7V0FHRztRQUNILE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO2FBQ3hDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFFbkUsSUFBSSxPQUFPLGNB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