"use strict";
/*
 * Copyright (C) 2017 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * check if element is visible
 * @param  {HTMLElement} elem  element to check
 * @return {Boolean}           true if element is within viewport
 */
function isElementDisplayed(element) {
    function nodeIsElement(node) {
        if (!node) {
            return false;
        }
        switch (node.nodeType) {
            case Node.ELEMENT_NODE:
            case Node.DOCUMENT_NODE:
            case Node.DOCUMENT_FRAGMENT_NODE:
                return true;
            default:
                return false;
        }
    }
    function parentElementForElement(element) {
        if (!element) {
            return null;
        }
        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);
    }
    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {
        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)
            if (predicate(node)) {
                return node;
            }
        return null;
    }
    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {
        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))
            if (predicate(element)) {
                return element;
            }
        return null;
    }
    function cascadedStylePropertyForElement(element, property) {
        if (!element || !property) {
            return null;
        }
        // if document-fragment, skip it and use element.host instead. This happens
        // when the element is inside a shadow root.
        // window.getComputedStyle errors on document-fragment.
        if (element instanceof DocumentFragment) {
            element = element.host;
        }
        let computedStyle = window.getComputedStyle(element);
        let computedStyleProperty = computedStyle.getPropertyValue(property);
        if (computedStyleProperty && computedStyleProperty !== 'inherit') {
            return computedStyleProperty;
        }
        // Ideally getPropertyValue would return the 'used' or 'actual' value, but
        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.
        // Fall back to the first non-'inherit' value found in an ancestor.
        // In any case, getPropertyValue will not return 'initial'.
        // FIXME: will this incorrectly inherit non-inheritable CSS properties?
        // I think all important non-inheritable properties (width, height, etc.)
        // for our purposes here are specially resolved, so this may not be an issue.
        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values
        let parentElement = parentElementForElement(element);
        return cascadedStylePropertyForElement(parentElement, property);
    }
    function elementSubtreeHasNonZeroDimensions(element) {
        let boundingBox = element.getBoundingClientRect();
        if (boundingBox.width > 0 && boundingBox.height > 0) {
            return true;
        }
        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.
        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {
            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');
            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);
        }
        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');
        if (cascadedOverflow === 'hidden') {
            return false;
        }
        // If the container's overflow is not hidden and it has zero size, consider the
        // container to have non-zero dimensions if a child node has non-zero dimensions.
        return Array.from(element.childNodes).some((childNode) => {
            if (childNode.nodeType === Node.TEXT_NODE) {
                return true;
            }
            if (nodeIsElement(childNode)) {
                return elementSubtreeHasNonZeroDimensions(childNode);
            }
            return false;
        });
    }
    function elementOverflowsContainer(element) {
        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');
        if (cascadedOverflow !== 'hidden') {
            return false;
        }
        // FIXME: this needs to take into account the scroll position of the element,
        // the display modes of it and its ancestors, and the container it overflows.
        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.
        return true;
    }
    function isElementSubtreeHiddenByOverflow(element) {
        if (!element) {
            return false;
        }
        if (!elementOverflowsContainer(element)) {
            return false;
        }
        if (!element.childNodes.length) {
            return false;
        }
        // This element's subtree is hidden by overflow if all child subtrees are as well.
        return Array.from(element.childNodes).every((childNode) => {
            // Returns true if the child node is overflowed or otherwise hidden.
            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.
            // Visibility of text nodes is controlled by parent
            if (childNode.nodeType === Node.TEXT_NODE) {
                return false;
            }
            if (!nodeIsElement(childNode)) {
                return true;
            }
            if (!elementSubtreeHasNonZeroDimensions(childNode)) {
                return true;
            }
            // Recurse.
            return isElementSubtreeHiddenByOverflow(childNode);
        });
    }
    // walk up the tree testing for a shadow root
    function isElementInsideShadowRoot(element) {
        if (!element) {
            return false;
        }
        if (element.parentNode && element.parentNode.host) {
            return true;
        }
        return isElementInsideShadowRoot(element.parentNode);
    }
    // This is a partial reimplementation of Selenium's "element is displayed" algorithm.
    // When the W3C specification's algorithm stabilizes, we should implement that.
    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.
    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {
        return false;
    }
    // Special cases for specific tag names.
    switch (element.tagName.toUpperCase()) {
        case 'BODY':
            return true;
        case 'SCRIPT':
        case 'NOSCRIPT':
            return false;
        case 'OPTGROUP':
        case 'OPTION': {
            // Option/optgroup are considered shown if the containing <select> is shown.
            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');
            return isElementDisplayed(enclosingSelectElement);
        }
        case 'INPUT':
            // <input type="hidden"> is considered not shown.
            if (element.type === 'hidden') {
                return false;
            }
            break;
        // case 'MAP':
        // FIXME: Selenium has special handling for <map> elements. We don't do anything now.
        default:
            break;
    }
    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {
        return false;
    }
    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {
        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;
    });
    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {
        return cascadedStylePropertyForElement(e, 'display') === 'none';
    });
    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {
        return false;
    }
    if (!elementSubtreeHasNonZeroDimensions(element)) {
        return false;
    }
    if (isElementSubtreeHiddenByOverflow(element)) {
        return false;
    }
    return true;
}
exports.default = isElementDisplayed;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNFbGVtZW50RGlzcGxheWVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NjcmlwdHMvaXNFbGVtZW50RGlzcGxheWVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7O0FBRUg7Ozs7R0FJRztBQUNILFNBQXdCLGtCQUFrQixDQUFFLE9BQWdCO0lBQ3hELFNBQVMsYUFBYSxDQUFDLElBQWM7UUFDakMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sS0FBSyxDQUFBO1NBQ2Y7UUFFRCxRQUFRLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDdkIsS0FBSyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3ZCLEtBQUssSUFBSSxDQUFDLGFBQWEsQ0FBQztZQUN4QixLQUFLLElBQUksQ0FBQyxzQkFBc0I7Z0JBQzVCLE9BQU8sSUFBSSxDQUFBO1lBRWY7Z0JBQ0ksT0FBTyxLQUFLLENBQUE7U0FDZjtJQUNMLENBQUM7SUFFRCxTQUFTLHVCQUF1QixDQUFDLE9BQWlCO1FBQzlDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDVixPQUFPLElBQUksQ0FBQTtTQUNkO1FBRUQsT0FBTyxvQ0FBb0MsQ0FBQyxPQUFPLENBQUMsVUFBd0IsRUFBRSxhQUFhLENBQUMsQ0FBQTtJQUNoRyxDQUFDO0lBRUQsU0FBUyxvQ0FBb0MsQ0FBQyxVQUFvQyxFQUFFLFNBQW1CO1FBQ25HLEtBQ0ksSUFBSSxJQUFJLEdBQWUsVUFBVSxFQUNqQyxJQUFJLElBQUksSUFBSSxLQUFNLFVBQW1CLENBQUMsYUFBYSxFQUNuRCxJQUFJLEdBQUksSUFBb0IsQ0FBQyxVQUF3QjtZQUVyRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDakIsT0FBTyxJQUFJLENBQUE7YUFDZDtRQUVMLE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQztJQUVELFNBQVMsdUNBQXVDLENBQUMsYUFBcUMsRUFBRSxTQUFtQjtR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