"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shadowFnFactory_1 = require("../../scripts/shadowFnFactory");
/**
 *
 * Access elements inside a given element's shadowRoot
 *
 * <example>
    :shadow$$.js
    it('should return elements inside a shadowRoot', () => {
        const innerEl = $('.input').shadow$$('#innerEl');
        console.log(innerEl.getValue()); // outputs: 'test123'
    });
 * </example>
 *
 * If you are working with lots of nested shadow roots,
 * an alternative approach to `shadow$$` is to use a custom locator strategy,
 * for example: https://www.npmjs.com/package/query-selector-shadow-dom#webdriverio
 *
 * @alias element.shadow$$
 * @param {String|Function} selector  selector or JS Function to fetch a certain element
 * @return {ElementArray}
 * @type utility
 *
 */
async function shadowRoot(selector) {
    return await this.$$(shadowFnFactory_1.shadowFnFactory(selector, true));
}
exports.default = shadowRoot;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhZG93JCQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvZWxlbWVudC9zaGFkb3ckJC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1FQUErRDtBQUUvRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBcUJHO0FBQ1ksS0FBSyxVQUFVLFVBQVUsQ0FFcEMsUUFBZ0I7SUFFaEIsT0FBTyxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsaUNBQWUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQTtBQUN6RCxDQUFDO0FBTEQsNkJBS0MifQ==