"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 * Returns the previous sibling element of the selected DOM-element.
 *
 * <example>
    :index.html
    <div class="parent">
        <p>Sibling One</p>
        <p>Sibling Two</p>
        <p>Sibling Three</p>
    </div>
    :previousElement.js
    it('should get text from previous sibling element', () => {
        const elem = $$('p');
        console.log(elem[1].previousElement().getText()); // outputs: "Sibling One"
    });
 * </example>
 *
 * @alias element.previousElement
 * @return {Element}
 * @type utility
 */
function previousElement() {
    return this.$(/* istanbul ignore next */ function () {
        return this.previousElementSibling;
    });
}
exports.default = previousElement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmlvdXNFbGVtZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL2VsZW1lbnQvcHJldmlvdXNFbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCRztBQUNILFNBQXdCLGVBQWU7SUFDbkMsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLDBCQUEwQixDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLHNCQUFxQyxDQUFBO0lBQ3JELENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQUpELGtDQUlDIn0=