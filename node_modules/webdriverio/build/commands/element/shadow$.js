"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shadowFnFactory_1 = require("../../scripts/shadowFnFactory");
/**
 *
 * Access an element inside a given element's shadowRoot
 *
 * <example>
    :shadow$$.js
    it('should return an element inside a shadowRoot', () => {
        const innerEl = $('.input').shadow$('#innerEl');
        console.log(innerEl.getValue()); // outputs: 'test123'
    });
 * </example>
 *
 * If you are working with lots of nested shadow roots,
 * an alternative approach to `shadow$` is to use a custom locator strategy,
 * for example: https://www.npmjs.com/package/query-selector-shadow-dom#webdriverio
 *
 * @alias element.shadow$
 * @param {String|Function} selector  selector or JS Function to fetch a certain element
 * @return {Element}
 * @type utility
 *
 */
async function shadowRoot(selector) {
    return await this.$(shadowFnFactory_1.shadowFnFactory(selector));
}
exports.default = shadowRoot;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhZG93JC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L3NoYWRvdyQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtRUFBK0Q7QUFFL0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCRztBQUNZLEtBQUssVUFBVSxVQUFVLENBRXBDLFFBQWdCO0lBRWhCLE9BQU8sTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLGlDQUFlLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQTtBQUNsRCxDQUFDO0FBTEQsNkJBS0MifQ==