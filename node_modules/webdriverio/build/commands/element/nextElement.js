"use strict";
/**
 *
 * Returns the next sibling element of the selected DOM-element.
 *
 * <example>
    :index.html
    <div class="parent">
        <p>Sibling One</p>
        <p>Sibling Two</p>
        <p>Sibling Three</p>
    </div>
    :nextElement.js
    it('should get text from next sibling element', () => {
        const elem = $$('p');
        console.log(elem[1].nextElement().getText()); // outputs: "Sibling Three"
    });
 * </example>
 *
 * @alias element.nextElement
 * @return {Element}
 * @type utility
 */
Object.defineProperty(exports, "__esModule", { value: true });
function nextElement() {
    return this.$(/* istanbul ignore next */ function () {
        return this.nextElementSibling;
    });
}
exports.default = nextElement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV4dEVsZW1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvZWxlbWVudC9uZXh0RWxlbWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCRzs7QUFFSCxTQUF3QixXQUFXO0lBQy9CLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQztRQUNyQyxPQUFPLElBQUksQ0FBQyxrQkFBaUMsQ0FBQTtJQUNqRCxDQUFDLENBQUMsQ0FBQTtBQUNOLENBQUM7QUFKRCw4QkFJQyJ9