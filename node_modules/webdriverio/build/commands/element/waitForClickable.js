"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Wait for an element for the provided amount of
 * milliseconds to be clickable or not clickable.
 *
 * <example>
    :waitForClickable.js
    it('should detect when element is clickable', () => {
        const elem = $('#elem')
        elem.waitForClickable({ timeout: 3000 });
    });
    it('should detect when element is no longer clickable', () => {
        const elem = $('#elem')
        elem.waitForClickable({ reverse: true });
    });
 * </example>
 *
 * @alias element.waitForClickable
 * @param {WaitForOptions=}  options             waitForEnabled options (optional)
 * @param {Number=}          options.timeout     time in ms (default: 500)
 * @param {Boolean=}         options.reverse     if true it waits for the opposite (default: false)
 * @param {String=}          options.timeoutMsg  if exists it overrides the default error message
 * @param {Number=}          options.interval    interval between checks (default: `waitforInterval`)
 * @return {Boolean} `true` if element is clickable (or doesn't if flag is set)
 *
 */
async function waitForClickable({ timeout = this.options.waitforTimeout, interval = this.options.waitforInterval, reverse = false, timeoutMsg = `element ("${this.selector}") still ${reverse ? '' : 'not '}clickable after ${timeout}ms` } = {}) {
    return this.waitUntil(async () => reverse !== await this.isClickable(), { timeout, timeoutMsg, interval });
}
exports.default = waitForClickable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FpdEZvckNsaWNrYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L3dhaXRGb3JDbGlja2FibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JHO0FBQ1ksS0FBSyxVQUFVLGdCQUFnQixDQUUxQyxFQUNJLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFDckMsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUN2QyxPQUFPLEdBQUcsS0FBSyxFQUNmLFVBQVUsR0FBRyxhQUFhLElBQUksQ0FBQyxRQUFRLFlBQVksT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sbUJBQW1CLE9BQU8sSUFBSSxLQUN0RixFQUFFO0lBRXRCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FDakIsS0FBSyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEtBQUssTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQ2hELEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsQ0FDcEMsQ0FBQTtBQUNMLENBQUM7QUFiRCxtQ0FhQyJ9