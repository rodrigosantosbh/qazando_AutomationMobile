"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Throttle the network capabilities of the browser. This can help to
 * emulate certain scenarios where a user loses their internet connection
 * and your app needs to address that.
 *
 * There are many presets available with default configurations for ease of use.
 * They are `offline`, `GPRS`, `Regular2G`, `Good2G`, `Regular3G`, `Good3G`,
 * `Regular4G`, `DSL`, `WiFi`, `online`.
 *
 * You can see the values for these presets [in the source code](https://github.com/webdriverio/webdriverio/blob/6824e4eb118a8d20685f12f4bc42f13fd56f8a25/packages/webdriverio/src/commands/browser/throttle.js#L29).
 *
 * :::info
 *
 * Note that using the `throttle` command requires support for Chrome DevTools protocol and e.g.
 * can not be used when running automated tests in the cloud. Find out more in the
 * [Automation Protocols](/docs/automationProtocols) section.
 *
 * :::
 *
 * <example>
    :throttle.js
    it('should throttle the network', () => {
        // via static string preset
        browser.throttle('Regular 3G')

        // via custom values
        browser.throttle({
            'offline': false,
            'downloadThroughput': 200 * 1024 / 8,
            'uploadThroughput': 200 * 1024 / 8,
            'latency': 20
        })
    });
 * </example>
 *
 * @alias browser.throttle
 * @param {ThrottleOptions} params  parameters for throttling
 * @param {Boolean}        params.offline              True to emulate internet disconnection.
 * @param {Number}         params.latency              Minimum latency from request sent to response headers received (ms).
 * @param {Number}         params.downloadThroughput   Maximal aggregated download throughput (bytes/sec). -1 disables download throttling.
 * @param {Number}         params.uploadThroughput     Maximal aggregated upload throughput (bytes/sec). -1 disables upload throttling.
 * @type utility
 *
 */
const utils_1 = require("../../utils");
const NETWORK_PRESETS = {
    'offline': {
        offline: true,
        downloadThroughput: 0,
        uploadThroughput: 0,
        latency: 1
    },
    'GPRS': {
        offline: false,
        downloadThroughput: 50 * 1024 / 8,
        uploadThroughput: 20 * 1024 / 8,
        latency: 500
    },
    'Regular2G': {
        offline: false,
        downloadThroughput: 250 * 1024 / 8,
        uploadThroughput: 50 * 1024 / 8,
        latency: 300
    },
    'Good2G': {
        offline: false,
        downloadThroughput: 450 * 1024 / 8,
        uploadThroughput: 150 * 1024 / 8,
        latency: 150
    },
    'Regular3G': {
        offline: false,
        downloadThroughput: 750 * 1024 / 8,
        uploadThroughput: 250 * 1024 / 8,
        latency: 100
    },
    'Good3G': {
        offline: false,
        downloadThroughput: 1.5 * 1024 * 1024 / 8,
        uploadThroughput: 750 * 1024 / 8,
        latency: 40
    },
    'Regular4G': {
        offline: false,
        downloadThroughput: 4 * 1024 * 1024 / 8,
        uploadThroughput: 3 * 1024 * 1024 / 8,
        latency: 20
    },
    'DSL': {
        offline: false,
        downloadThroughput: 2 * 1024 * 1024 / 8,
        uploadThroughput: 1 * 1024 * 1024 / 8,
        latency: 5
    },
    'WiFi': {
        offline: false,
        downloadThroughput: 30 * 1024 * 1024 / 8,
        uploadThroughput: 15 * 1024 * 1024 / 8,
        latency: 2
    },
    'online': {
        offline: false,
        latency: 0,
        downloadThroughput: -1,
        uploadThroughput: -1
    }
};
const NETWORK_PRESET_TYPES = Object.keys(NETWORK_PRESETS);
async function throttle(params) {
    if (
    /**
     * check string parameter
     */
    (typeof params !== 'string' || !NETWORK_PRESET_TYPES.includes(params)) &&
        /**
         * check object parameter
         */
        (typeof params !== 'object')) {
        throw new Error(`Invalid parameter for "throttle". Expected it to be typeof object or one of the following values: ${NETWORK_PRESET_TYPES.join(', ')} but found "${params}"`);
    }
    /**
     * use WebDriver extension if connected with cloud service
     */
    if (this.isSauce) {
        const browser = utils_1.getBrowserObject(this);
        await browser.throttleNetwork(params);
        return null;
    }
    // Connect to Chrome DevTools
    await this.getPuppeteer();
    if (!this.puppeteer) {
        throw new Error('No Puppeteer connection could be established which is required to use this command');
    }
    const pages = await this.puppeteer.pages();
    const client = await pages[0].target().createCDPSession();
    // Set throttling property
    await client.send('Network.emulateNetworkConditions', typeof params === 'string'
        ? NETWORK_PRESETS[params]
        : params);
    return null;
}
exports.default = throttle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhyb3R0bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvYnJvd3Nlci90aHJvdHRsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMkNHO0FBQ0gsdUNBQThDO0FBRzlDLE1BQU0sZUFBZSxHQUFHO0lBQ3BCLFNBQVMsRUFBRTtRQUNQLE9BQU8sRUFBRSxJQUFJO1FBQ2Isa0JBQWtCLEVBQUUsQ0FBQztRQUNyQixnQkFBZ0IsRUFBRSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxDQUFDO0tBQ2I7SUFDRCxNQUFNLEVBQUU7UUFDSixPQUFPLEVBQUUsS0FBSztRQUNkLGtCQUFrQixFQUFFLEVBQUUsR0FBRyxJQUFJLEdBQUcsQ0FBQztRQUNqQyxnQkFBZ0IsRUFBRSxFQUFFLEdBQUcsSUFBSSxHQUFHLENBQUM7UUFDL0IsT0FBTyxFQUFFLEdBQUc7S0FDZjtJQUNELFdBQVcsRUFBRTtRQUNULE9BQU8sRUFBRSxLQUFLO1FBQ2Qsa0JBQWtCLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDO1FBQ2xDLGdCQUFnQixFQUFFLEVBQUUsR0FBRyxJQUFJLEdBQUcsQ0FBQztRQUMvQixPQUFPLEVBQUUsR0FBRztLQUNmO0lBQ0QsUUFBUSxFQUFFO1FBQ04sT0FBTyxFQUFFLEtBQUs7UUFDZCxrQkFBa0IsRUFBRSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUM7UUFDbEMsZ0JBQWdCLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDO1FBQ2hDLE9BQU8sRUFBRSxHQUFHO0tBQ2Y7SUFDRCxXQUFXLEVBQUU7UUFDVCxPQUFPLEVBQUUsS0FBSztRQUNkLGtCQUFrQixFQUFFLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQztRQUNsQyxnQkFBZ0IsRUFBRSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUM7UUFDaEMsT0FBTyxFQUFFLEdB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